   1              	# 1 "build/storm_boot_startup_code.S"
   1              	        .global main                    // int main(void)
   0              	
   2              	
   3              	        .global _etext                  // -> .data initial values in ROM
   4              	        .global _data                   // -> .data area in RAM
   5              	        .global _edata                  // end of .data area
   6              	        .global __bss_start             // -> .bss area in RAM
   7              	        .global __bss_end__             // end of .bss area
   8              	        .global _stack                  // top of stack
   9              	
  10              	// Stack Sizes
  11              	        .set  UND_STACK_SIZE, 0x00000080
  12              	        .set  ABT_STACK_SIZE, 0x00000080
  13              	        .set  FIQ_STACK_SIZE, 0x00000080
  14              	        .set  IRQ_STACK_SIZE, 0X00000080
  15              	        .set  SVC_STACK_SIZE, 0x00000080
  16              	
  17              	// Standard definitions of Mode bits and Interrupt flags in MSRs
  18              	        .set  MODE_USR, 0x10            // User Mode
  19              	        .set  MODE_FIQ, 0x11            // FIQ Mode
  20              	        .set  MODE_IRQ, 0x12            // IRQ Mode
  21              	        .set  MODE_SVC, 0x13            // Supervisor Mode
  22              	        .set  MODE_ABT, 0x17            // Abort Mode
  23              	        .set  MODE_UND, 0x1B            // Undefined Mode
  24              	        .set  MODE_SYS, 0x1F            // System Mode
  25              	
  26              	        .equ  FIQ_BIT, 0x40             // when FIQ bit is set, FIQ is disabled
  27              	        .equ  IRQ_BIT, 0x80             // when IRQ bit is set, IRQ is disabled
  28              	
  29              	        .text
  30              	        .code 32
  31              	        .align 2
  32              	
  33              	        .global _boot
  34              	        .func   _boot
  35              	_boot:
  36              	
  37              	// Runtime Interrupt Vectors
  38              	// -------------------------------------------------------------------
  39              	Vectors:
  40 0000 EAFFFFFE 	        b     _start                    // reset - _start
  41 0004 EAFFFFFE 	        b     .                         // undefined
  42 0008 EAFFFFFE 	        b     .                         // SWI
  43 000c EAFFFFFE 	        b     .                         // program abort
  44 0010 EAFFFFFE 	        b     .                         // data abort
  45 0014 E1A00000 	        nop                             // reserved
  46 0018 EAFFFFFE 	        b     .                     	// IRQ
  47 001c EAFFFFFE 	        b     .                         // FIQ
  48              	
  50              	        .endfunc
  51              	
  52              	
  53              	// Setup the operating mode & stack.
  54              	// -------------------------------------------------------------------
  55              	        .global _start, start, _mainCRTStartup
  56              	        .func   _start
  57              	
  58              	_start:
  59              	start:
  60              	_mainCRTStartup:
  61              	
  62              	// Who am I? Where am I going?
  63              	
  64              	// - Set stack location for system mode with interrupts disabled
  65              	// -------------------------------------------------------------------
  66 0020 E59F0034 	        ldr   r0,=_stack                    // Calc stack base
  67 0024 E10F1000 			mrs   r1,CPSR
  68 0028 E3C1107F 			bic   r1,r1,#0x7F
  69 002c E38110DF 	        orr   r1,r1,#MODE_SYS|IRQ_BIT|FIQ_BIT  // Change to System Mode
  70 0030 E129F001 	        msr   CPSR,r1
  71 0034 E1A0D000 	        mov   sp,r0                         // Store stack base
  72              	
  73              	
  74              	// Call main program: main(0)
  75              	// -------------------------------------------------------------------
  76 0038 E3A00000 	        mov   r0,#0                     // no arguments (argc = 0)
  77 003c E1A01000 	        mov   r1,r0
  78 0040 E1A02000 	        mov   r2,r0
  79 0044 E1A0B000 	        mov   fp,r0                     // null frame pointer
  80 0048 E1A07000 	        mov   r7,r0                     // null frame pointer for thumb
  81 004c E59FA00C 	        ldr   r10,=main
  82 0050 E1A0E00F 	        mov   lr,pc
  83 0054 E1A0F00A 	        mov   pc, r10                   // enter main()
  84              	
  86              	        .endfunc
  87              	
  88              	        .global _reset, reset, exit, abort
  89              	        .func   _reset
  90              	_reset:
  91              	reset:
  92              	exit:
  93              	abort:
  94              	
  95 0058 EAFFFFFE 	        b     .                         // loop until reset
  96              	
  98              	        .endfunc
  99              	
 100 005c 00000000 	        .end
 100      00000000 
DEFINED SYMBOLS
build/storm_boot_startup_code.S:11     *ABS*:00000080 UND_STACK_SIZE
build/storm_boot_startup_code.S:12     *ABS*:00000080 ABT_STACK_SIZE
build/storm_boot_startup_code.S:13     *ABS*:00000080 FIQ_STACK_SIZE
build/storm_boot_startup_code.S:14     *ABS*:00000080 IRQ_STACK_SIZE
build/storm_boot_startup_code.S:15     *ABS*:00000080 SVC_STACK_SIZE
build/storm_boot_startup_code.S:18     *ABS*:00000010 MODE_USR
build/storm_boot_startup_code.S:19     *ABS*:00000011 MODE_FIQ
build/storm_boot_startup_code.S:20     *ABS*:00000012 MODE_IRQ
build/storm_boot_startup_code.S:21     *ABS*:00000013 MODE_SVC
build/storm_boot_startup_code.S:22     *ABS*:00000017 MODE_ABT
build/storm_boot_startup_code.S:23     *ABS*:0000001b MODE_UND
build/storm_boot_startup_code.S:24     *ABS*:0000001f MODE_SYS
build/storm_boot_startup_code.S:26     *ABS*:00000040 FIQ_BIT
build/storm_boot_startup_code.S:27     *ABS*:00000080 IRQ_BIT
build/storm_boot_startup_code.S:31     .text:00000000 $a
build/storm_boot_startup_code.S:35     .text:00000000 _boot
build/storm_boot_startup_code.S:39     .text:00000000 Vectors
build/storm_boot_startup_code.S:58     .text:00000020 _start
build/storm_boot_startup_code.S:59     .text:00000020 start
build/storm_boot_startup_code.S:60     .text:00000020 _mainCRTStartup
build/storm_boot_startup_code.S:90     .text:00000058 _reset
build/storm_boot_startup_code.S:91     .text:00000058 reset
build/storm_boot_startup_code.S:92     .text:00000058 exit
build/storm_boot_startup_code.S:93     .text:00000058 abort
build/storm_boot_startup_code.S:100    .text:0000005c $d
                   .debug_aranges:0000000c $d

UNDEFINED SYMBOLS
main
_etext
_data
_edata
__bss_start
__bss_end__
_stack
